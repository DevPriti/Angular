ap.module---->
import { BrowserModule } from '@angular/platform-browser';
import { NgModule } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { HttpModule } from '@angular/http';
import { CommonModule } from '@angular/common';

import { AppComponent } from './app.component';
import { BasicHighlightDirective } from './basic-highlight/basic-highlight.directive';
import { BetterHighlightDirective } from './better-highlight/better-hightlight.directive';
import { UnlessDirective } from './unless.directive';

@NgModule({
  declarations: [
    AppComponent,
    BasicHighlightDirective,
    BetterHighlightDirective,
    UnlessDirective
  ],
  imports: [
    BrowserModule,
    FormsModule,
    HttpModule,
    CommonModule
  ],
  providers: [],
  bootstrap: [AppComponent]
})
export class AppModule { }
app.component.html---------------------------------------->
<div class="container">
  <div class="row">
    <div class="col-xs-12">
      <button class="btn btn-primary"
              (click)="onlyOdd = !onlyOdd">
        Only show odd numbers
      </button>
      <br><br>
          <ul class="list-group">
            <div *ngIf="onlyOdd">
              <li class="list-group-item"
                  [ngClass]="{odd: odd % 2 !==0}"
                  [ngStyle]="{backgroundColor : odd % 2 !==0 ? 'lightblue':'transparent'}"
                  *ngFor="let odd of oddNumbers">
                {{ odd }}
              </li>
            </div>
            <!--<div *ngIf="!onlyOdd">
    <li class="list-group-item"
        [ngClass]="{odd: even % 2 !==0}"
        [ngStyle]="{backgroundColor : even % 2 !==0 ? 'lightblue':'transparent'}"
        *ngFor="let even of evenNumbers">
      {{ even }}
    </li>
  </div>
  <ng-template [ngIf]="!onlyOdd">
    <div>
      <li class="list-group-item"
          [ngClass]="{odd: even % 2 !==0}"
          [ngStyle]="{backgroundColor : even % 2 !==0 ? 'lightblue':'transparent'}"
          *ngFor="let even of evenNumbers">
        {{ even }}
      </li>
    </div>
  </ng-template>-->
            <div *appUnless="onlyOdd">
              <li class="list-group-item"
                  [ngClass]="{odd: even % 2 !==0}"
                  [ngStyle]="{backgroundColor : even % 2 !==0 ? 'lightblue':'transparent'}"
                  *ngFor="let even of evenNumbers">
                {{ even }}
              </li>
            </div>
          </ul>      
      <p appBasicHighlight>Style me!</p>
      <p appBetterHighlight [defaultColor]="'lightyellow'" [highlightedColor]="'pink'">Style me!</p>
      <div [ngSwitch]="value">
        <p *ngSwitchCase="5">Value is 5</p>
        <p *ngSwitchCase="10">Value is 10</p>
        <p *ngSwitchCase="100">Value is 100</p>
        <p *ngSwitchDefault>Value is Default</p>
      </div>
    </div>
  </div>
</div>
ap.component.ts---------------------->
import { Component } from '@angular/core';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent {
  numbers = [1, 2, 3, 4, 5];
  oddNumbers = [1, 3, 5];
  evenNumbers = [2, 4];
  onlyOdd = false;
  value = 10;
}
app.component.css------------->
.container {
  margin-top: 30px;
}
.odd{
  color : red;
}
unless.directive.ts----------------------------->
import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';

@Directive({
  selector: '[appUnless]'
})
export class UnlessDirective {
  @Input() set appUnless(condition: boolean) {
    if (!condition) {
      this.viewref.createEmbeddedView(this.tenplateref);
    } else {
      this.viewref.clear();
    }
  }
  constructor(private tenplateref: TemplateRef<any>, private viewref: ViewContainerRef) { }

}
basic-hilight/basic-hilight.directive----------------->
import { Directive, ElementRef, OnInit } from '@angular/core';
@Directive({
  selector: '[appBasicHighlight]'
})
export class BasicHighlightDirective implements OnInit {
  constructor(private elementRef: ElementRef) {
  }
  ngOnInit() {
    this.elementRef.nativeElement.style.backgroundColor = 'lightgreen';
  }
}
better-hilight/better-highlit.directive.ts---------------->
import { Directive, OnInit, Renderer2, ElementRef, HostListener, HostBinding, Input } from '@angular/core';
@Directive({
  selector : '[appBetterHighlight]'
})
export class BetterHighlightDirective implements OnInit{
  
  @Input() defaultColor: string = 'transparent';
  @Input() highlightedColor: string = 'pink';
  @HostBinding('style.backgroundColor') backgroundColor: string;
  constructor(private elRef : ElementRef, private renderer: Renderer2) {

  }
  ngOnInit() {
    //this.renderer.setStyle(this.elRef.nativeElement, 'background-color', 'pink');
    this.backgroundColor = this.defaultColor;
  }
  @HostListener('mouseenter') mouseover(eventData: Event) {
    //this.renderer.setStyle(this.elRef.nativeElement, 'background-color', 'pink');
    this.backgroundColor = this.highlightedColor;
  }
  @HostListener('mouseleave') mouseleave(eventData: Event) {
    //this.renderer.setStyle(this.elRef.nativeElement, 'background-color', 'transparent');
    this.backgroundColor = this.defaultColor;
  }
}
